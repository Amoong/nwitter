{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","vlaue","autoComplete","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","doc","id","update","attachmentUrl","src","alt","width","height","window","confirm","delete","refFromURL","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","useRef","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","payload","createdAt","Date","now","creatorId","collection","add","onClearAttachment","current","maxLength","accept","theFile","files","reader","FileReader","onloadend","result","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","Navigation","to","displayName","withRouter","history","refreshUser","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","signOut","push","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2350e93.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = event => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        );\r\n        // create account\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n        // log in\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          vlaue={email}\r\n          autoComplete=\"email\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          vlaue={password}\r\n          autoComplete=\"current-password\"\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n      </form>\r\n      <strong>{error}</strong>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async event => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n      nweetObj.attachmentUrl &&\r\n        storageService.refFromURL(nweetObj.attachmentUrl)?.delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" />\r\n              </form>\r\n              <button onClick={toggleEditing}>Cancel</button>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              alt=\"attachment\"\r\n              width=\"200px\"\r\n              height=\"200px\"\r\n            />\r\n          )}\r\n          {isOwner && <button onClick={onDeleteClick}>Delete Nweet</button>}\r\n          {isOwner && <button onClick={toggleEditing}>Edit Nweet</button>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(null);\r\n  const fileRef = useRef(null);\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment) {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const payload = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"nweets\").add(payload);\r\n\r\n    setNweet(\"\");\r\n    onClearAttachment();\r\n  };\r\n\r\n  const onChange = event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = event => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      setAttachment(reader.result);\r\n    };\r\n\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n    fileRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={nweet}\r\n        onChange={onChange}\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input\r\n        ref={fileRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n      />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} alt=\"attachment\" width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  const getNweets = async () => {\r\n    const dbNweets = await dbService.collection(\"nweets\").get();\r\n    dbNweets.forEach(document => {\r\n      const nweetObject = {\r\n        ...document.data(),\r\n        id: document.id,\r\n      };\r\n\r\n      setNweets(prev => [nweetObject, ...prev]);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getNweets();\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot(snapshot => {\r\n        const nweetArray = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        console.log(nweetArray);\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map(nweet => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">{ userObj.displayName}의 Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, history, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutLick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChnage = event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    if (userObj.displayName === newDisplayName) {\r\n      return;\r\n    }\r\n\r\n    await userObj.updateProfile({\r\n      displayName: newDisplayName,\r\n    });\r\n    refreshUser();\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n\r\n    nweets.docs.map(doc => console.log(doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Diplay name\"\r\n          onChange={onChnage}\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutLick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Profile);\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}